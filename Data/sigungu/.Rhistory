x <- c(1:100)
x
add2(3,5)
add2 <- function(x,y) {
x+y
}
add2(3,5)
above <- function(x,n){
use <-x>n
x[use]
}
x<-1:20
above(x,12)
above <- function(x,n=10){
use <-x>n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
mean[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y){
+     nc <- ncol(y)
+     means <- numeric(nc)
+     for(i in 1:nc){
+         means[i] <- mean(y[,i])
+     }
+
+     means
+ }
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmaen(airquality)
columnmean(airquality)
columnmean <- function(y,removeNA=TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean(airquality,TURE)
columnmean(airquality,)
columnmean(airquality,FALSE)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11,num = 5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[-1]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
telegram(Strange seed)
telegram("Strange seed")
submit()
mad_libs
mad_libs(place="Suwon",adjective="crazy","Pokestop")
submit()
'I'%p%'love'%p%'R!'
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2-g1
mean(difference)
s <- sd(differecne)
s <- sd(difference)
mn +c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(g1,g2)$conf.int
t.test(difference)$conf.int
7*15.34^2+20*18.23^2
sp<-7*15.34^2+20*18.23^2
ns <- 28
ns<-27
sp <- sqrt(sp/ns)
132.86-127.44 +c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g2,g1,paired = FALSE,var.equal = TRUE)$conf
t.test(g2,g1,paired = TRUE)$conf
num <- (15.34^2/8+18.23^2/21)^2
den <- (25.34^2/8)^2/7 + (18.23^2/21)^2/20
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86 - 127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8+18.23^2/21)
1
2
(32-30)/10/sqrt(16)
(32-30)/(10/4)
15
qt(.95,15)
dim(fs)
t.test(fs$sheight,fs$fheight,paired = TRUE)
11.7885 *
| sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885 *sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
8
pt(2.5,15,lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
qnorm(2)
pnorm(2)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6,8.5,lower.tail=FALSE)
pbinom(6,8,.5,lower.tail=FALSE)
pbinom(7,8,.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
q
q()
myCol <- rep(NA,37)
myCol[36]<"NULL"
myCol[36]<-"NULL"
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,colClasses = myCol)
getwd()
setwd("~/Myfolder/Coursera")
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,colClasses = myCol)
str(stormData)
myCol[1,36]<-"NULL"
myCol[c(1,36)]<-"NULL"
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,colClasses = myCol)
str(stormData)
install.packages("data.table")
library(data.table)
dt <- fread("./data/storm.csv.bz2")
dt <- fread("./data/storm.csv.bz2",colClasses = myCol)
dt <- fread(file = "./data/storm.csv.bz2",colClasses = myCol)
dt <- fread(sprintf("bzcat %s","./data/storm.csv.bz2"))
dt <- fread("./data/storm.csv.bz2")
file.create("./data/storm.csv")
file.create("./data/storm.csv")
file.create("./data/Storm.csv")
file.create("Storm.csv")
unzip("./data/storm.csv.bz2")
unzip("./data/storm.csv.bz2",exdir="./data")
setwd("~/data")
setwd("~data")
setwd("./data")
unzip("storm.csv.bz2")
unzip("storm_csv.bz2")
str(stormData)
sys.time(stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,quote=""))
Sys.time(stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,quote=""))
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,quote="")
setwd("..")
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,quote="")
str(stormData)
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,quote="",colClasses = myCol)
str(stormData)
?read.csv
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,blank.lines.skip = TRUE,colClasses = myCol)
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,
quote = "\"\n",colClasses = myCol)
Sys.setlocale(category = "LC_CTYPE", locale = "C")
stormData <- read.csv("./data/storm.csv.bz2",header = TRUE,as.is = c(36))
str(stormData)
tail(stormData)
library(swirl)
swirl()
pt(2.5,15,lower.tail = FALSE)
qnorm(95,lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,8,.5,lower.tail = FALSE)
pbinom(7,8,.5)
ppois(9,5,lower.tail=FALSE)
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(.95)
pnorm(30+z,mean=30,lower.tail = FALSE)
pnorm(30+z,mean=32,lower.tail = FALSE)
pnorm(30+z,mean=32,lower.tail = FALSE)
pnorm(30+z*2,mean=32,lower.tail = FALSE,sd=2)
power.t.test(n=16,delta=2/4,sd=1,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=2,sd=4,type="one.sample",alt="one.sided")$power
power.t.test(n=16,delta=100,sd=200,type="one.sample",alt="one.sided")$power
power.t.test(power=.8,delta=2/4,sd=1,type="onew.sample",alternative = "one.sided")$n
power.t.test(power=.8,delta=2/4,sd=1,type="one.sample",alternative = "one.sided")$n
power.t.test(power=.8,delta=2,sd=4,type="one.sample",alternative = "one.sided")$n
power.t.test(power=.8,delta=100,sd=200,type="one.sample",alternative = "one.sided")$n
power.t.test(power=.8,n=26,sd=1,type="one.sample",alternative = "one.sided")$delta
power.t.test(power=.8,n=27,sd=1,type="one.sample",alternative = "one.sided")$delta
q
q()
library(swirl)
swirl()
head(pValues)
sum(pValues<.05)
sum(p.adjest(pVlues,method="bonferroni"))
sum(p.adjust(pVlues,method="bonferroni")<.05)
sum(p.adjust(pValues,method="bonferroni")<.05)
sum(p.adjust(pValues,method="BH")<.05)
tail(trueStatus)
table(pValues2<.05,trueStatus)
0
24/500
table(p.adjust(pValues2,method="bonferroni")<.05,trueStatus)
table(p.adjust(pValues2,method="BH")<.05,trueStatus)
(1+2+3+4+5+6)*1/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh,nh*B,replace = TRUE)
resam <- matrix(sam,B,nh)
meds <- apply(resam,1,median)
median(fh)-median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians,c(.025,.975))
quantile(meds,c(.025,.975))
library(swirl)
swirl()
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat()
testStat
obs <- testStat(BCcounts,group)
obs
apply9Bdata$count-Cdata$count,mean)
apply(9Bdata$count-Cdata$count,mean)
apply(Bdata$count-Cdata$count,mean)
apply(Bdata$count-Cdata$count,1,mean)
apply(Bdata$count-Cdata$count,0,mean)
mean(Bdata$count-Cdata$count)
sample(group)
perms <- sapply(1:10000,function(i) testStat(BCcounts,sample(group)))
perms > obs
mean(perms>obs)
testStat(DEcounts,group)
perms <- sapply(1:10000,function(i) testStat(DEcounts,sample(group)))
q()
library("knitr", lib.loc="~/R/win-library/3.3")
library("markdown", lib.loc="~/R/win-library/3.3")
knit("My_analysis.Rmd")
knit("tutorial.Rmd")
system("pandco -s -t slidy tutorial.md -o tutorial.html")
getwd()
setwd('../BDS_project')
getwd()
setwd('Data/sigungu')
library(xlsx)
?read.xlsx
data <- read.xlsx('노인장기요양보험_등급판정현황(2011).xls',header=FALSE,
startRow = 6,colIndex=c(3:9))
data <- read.xlsx('노인장기요양보험_등급판정현황_2011.xls',sheetIndex=1,
header=FALSE, startRow = 6,colIndex=c(3:9))
str(data)
start <- Sys.time()
data <- read.xlsx('노인장기요양보험_등급판정현황_2011.xls',sheetIndex=1,
header=FALSE, startRow = 6,colIndex=c(3:9),encoding = 'UTF-8')
loading_time <- Sys.time() - start
loading_time
str(data)
centers <- read.xlsx('노인장기요양보험_등급판정현황_2011.xls',sheetIndex=1,
header=FALSE, startRow = 6,
colIndex=c(2),encoding = 'UTF-8')
centers
centers <- read.xlsx('노인장기요양보험_등급판정현황_2011.xls',sheetIndex=1,
header=FALSE, startRow = 6,
colIndex=c(1,2),encoding = 'UTF-8')
str(centers)
head(centers)
start <- Sys.time()
data <- read.xlsx('노인장기요양보험_등급판정현황_2011.xls',sheetIndex=1,
header=FALSE, startRow = 6,colIndex=c(1:9),encoding = 'UTF-8')
loading_time <- Sys.time() - start
str(data)
loading_time
d1 <- data.frame()
d2 <- data.frame()
d3 <- data.frame()
grade_datas <- list(d1,d2,d3)
grade_datas[1]
years <- c('2013','2014','2015')
start <- Sys.time()
for(i in c(1:3)){
grade_datas[i] <- read.xlsx(
paste('노인장기요양보험_등급판정현황_자격별_',years[i],'.xls',sep=""),
sheetIndex=1, header=FALSE, startRow = 6,
colIndex=c(1:9),encoding='UTF-8')
}
loading_time <- Sys.time() - start
str(d1)
grade_datas[1]
str(grade_datas[1])
years <- c('2014','2015')
start <- Sys.time()
for(i in c(1:2)){
grade_datas[i] <- read.xlsx(
paste('노인장기요양보험_등급판정현황_자격별_',years[i],'.xls',sep=""),
sheetIndex=1, header=FALSE, startRow = 6,
colIndex=c(1:11),encoding='UTF-8')
}
loading_time <- Sys.time() - start
grade_datas[[1]]
str(grade_datas[1])
str(grade_datas[2])
